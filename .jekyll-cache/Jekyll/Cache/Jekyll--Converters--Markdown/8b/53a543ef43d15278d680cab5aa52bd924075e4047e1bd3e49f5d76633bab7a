I"{<h4 id="first-of-all-install-required-packages">First of all install required packages</h4>
<p><strong>tidyverse for data import and wrangling<br />
lubridate for date functions<br />
ggplot for visualization</strong></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="s2">"tidyverse"</span><span class="p">)</span><span class="w">
</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"lubridate"</span><span class="p">)</span><span class="w">
</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"ggplot2"</span><span class="p">)</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">      </span><span class="c1">#helps wrangle data</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">lubridate</span><span class="p">)</span><span class="w">      </span><span class="c1">#helps wrangle date attributes</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">        </span><span class="c1">#helps visualize data</span><span class="w">
</span><span class="n">getwd</span><span class="p">()</span><span class="w">                 </span><span class="c1">#displays your working directory</span><span class="w">
</span><span class="n">setwd</span><span class="p">(</span><span class="s2">"C:/Users/shan9/Desktop/Cyclistics/Cyclistic_Data_CSV"</span><span class="p">)</span><span class="w"> </span><span class="c1">#sets your working directory to simplify calls to data</span><span class="w">
</span></code></pre></div></div>
<h3 id="step-1-collect-data">STEP 1: COLLECT DATA</h3>

<p><strong>Upload Cyclistics Datasets csv files here</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">apr21</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"202104-divvy-tripdata.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">may21</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"202105-divvy-tripdata.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">jun21</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"202106-divvy-tripdata.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">jul21</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"202107-divvy-tripdata.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">aug21</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"202108-divvy-tripdata.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">sep21</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"202109-divvy-tripdata.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">oct21</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"202110-divvy-tripdata.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">nov21</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"202111-divvy-tripdata.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">dec21</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"202112-divvy-tripdata.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">jan22</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"202201-divvy-tripdata.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">feb22</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"202202-divvy-tripdata.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">mar22</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"202203-divvy-tripdata.csv"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<h3 id="step-2-wrangle-data-and-combine-into-a-single-file">STEP 2: WRANGLE DATA AND COMBINE INTO A SINGLE FILE</h3>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str</span><span class="p">(</span><span class="n">apr21</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">may21</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">jun21</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">jul21</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">aug21</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">sep21</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">oct21</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">nov21</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">dec21</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">jan22</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">feb22</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">mar22</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><strong>Change the datatype of date columns</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dec21</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dec21</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">started_at</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mdy_hms</span><span class="p">(</span><span class="n">started_at</span><span class="p">),</span><span class="w"> </span><span class="n">ended_at</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mdy_hms</span><span class="p">(</span><span class="n">ended_at</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p><strong>Stack individual quarter data frames into one big data frame</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_apr21_mar22</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">bind_rows</span><span class="p">(</span><span class="n">apr21</span><span class="p">,</span><span class="w"> </span><span class="n">may21</span><span class="p">,</span><span class="w"> </span><span class="n">jun21</span><span class="p">,</span><span class="n">jul21</span><span class="p">,</span><span class="n">aug21</span><span class="p">,</span><span class="n">sep21</span><span class="p">,</span><span class="n">oct21</span><span class="p">,</span><span class="n">nov21</span><span class="p">,</span><span class="n">dec21</span><span class="p">,</span><span class="n">jan22</span><span class="p">,</span><span class="n">feb22</span><span class="p">,</span><span class="n">mar22</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h3 id="step-3-clean-up-and-add-data-to-prepare-for-analysis">STEP 3: CLEAN UP AND ADD DATA TO PREPARE FOR ANALYSIS</h3>
<p><strong>Inspect the new table that has been created</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">colnames</span><span class="p">(</span><span class="n">data_apr21_mar22</span><span class="p">)</span><span class="w">  </span><span class="c1">#List of column names</span><span class="w">
</span><span class="n">nrow</span><span class="p">(</span><span class="n">data_apr21_mar22</span><span class="p">)</span><span class="w">  </span><span class="c1">#How many rows are in data frame?</span><span class="w">
</span><span class="nf">dim</span><span class="p">(</span><span class="n">data_apr21_mar22</span><span class="p">)</span><span class="w"> </span><span class="c1">#dimensions of data frame</span><span class="w">
</span><span class="n">summary</span><span class="p">(</span><span class="n">data_apr21_mar22</span><span class="p">)</span><span class="w"> </span><span class="c1">#Statistical summary of data</span><span class="w">
</span></code></pre></div></div>

<p><strong>Add a “ride_length” calculation to data_apr21_mar22 (in seconds)</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_apr21_mar22</span><span class="o">$</span><span class="n">ride_length</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">difftime</span><span class="p">(</span><span class="n">data_apr21_mar22</span><span class="o">$</span><span class="n">ended_at</span><span class="p">,</span><span class="w"> </span><span class="n">data_apr21_mar22</span><span class="o">$</span><span class="n">started_at</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">data_apr21_mar22</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><strong>Check “ride_length” to confirm it’s numeric datatype so we can run calculations on the data</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">is.double</span><span class="p">(</span><span class="n">data_apr21_mar22</span><span class="o">$</span><span class="n">ride_length</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><strong>Checking the data for negative ride_length values</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">table</span><span class="p">(</span><span class="n">data_apr21_mar22</span><span class="o">$</span><span class="n">ride_length</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">0</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<h4 id="remove-bad-data">Remove “bad” data</h4>
<p><strong>The dataframe includes a few hundred entries when bikes were taken out of docks and checked for quality by Divvy or ride_length was negative</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_apr21_mar22_V2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data_apr21_mar22</span><span class="p">[</span><span class="o">!</span><span class="p">(</span><span class="n">data_apr21_mar22</span><span class="o">$</span><span class="n">ride_length</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">0</span><span class="p">),]</span><span class="w">
</span></code></pre></div></div>
<p><strong>Confirming the removal of bad data</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">table</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">ride_length</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">0</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><strong>Add columns that list the day of week of each ride</strong><br />
This will allow us to aggregate ride data for each day of week, before completing these operations we could only aggregate at the ride level</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">day_of_week</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">format</span><span class="p">(</span><span class="n">as.Date</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">started_at</span><span class="p">),</span><span class="w"> </span><span class="s2">"%A"</span><span class="p">)</span><span class="w">

</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">time_of_day</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">format</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">started_at</span><span class="p">,</span><span class="w"> </span><span class="n">format</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"%H"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<h3 id="step-4-conduct-descriptive-analysis">STEP 4: CONDUCT DESCRIPTIVE ANALYSIS</h3>

<p><strong>Descriptive analysis on ride_length (all figures in seconds)</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mean</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">ride_length</span><span class="p">)</span><span class="w"> </span><span class="c1"># average</span><span class="w">
</span><span class="n">median</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">ride_length</span><span class="p">)</span><span class="w"> </span><span class="c1"># midpoint number</span><span class="w">
</span><span class="nf">min</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">ride_length</span><span class="p">)</span><span class="w"> </span><span class="c1"># shortest ride</span><span class="w">
</span><span class="nf">max</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">ride_length</span><span class="p">)</span><span class="w"> </span><span class="c1"># longest ride</span><span class="w">

</span><span class="n">summary</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">ride_length</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><strong>Compare members and casual users</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">aggregate</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">ride_length</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">member_casual</span><span class="p">,</span><span class="w"> </span><span class="n">FUN</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">)</span><span class="w">
</span><span class="n">aggregate</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">ride_length</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">member_casual</span><span class="p">,</span><span class="w"> </span><span class="n">FUN</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">median</span><span class="p">)</span><span class="w">
</span><span class="n">aggregate</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">ride_length</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">member_casual</span><span class="p">,</span><span class="w"> </span><span class="n">FUN</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">max</span><span class="p">)</span><span class="w">
</span><span class="n">aggregate</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">ride_length</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">member_casual</span><span class="p">,</span><span class="w"> </span><span class="n">FUN</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">min</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><strong>See the average ride time by each day for members vs casual users</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">aggregate</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">ride_length</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">member_casual</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">day_of_week</span><span class="p">,</span><span class="w"> </span><span class="n">FUN</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><strong>Notice that the days of the week are out of order. Let’s fix that.</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">day_of_week</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ordered</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">day_of_week</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Sunday"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Monday"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Tuesday"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Wednesday"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Thursday"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Friday"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Saturday"</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>
<p><strong>Now, let’s run the average ride time by each day for members vs casual users</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">aggregate</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">ride_length</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">member_casual</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">day_of_week</span><span class="p">,</span><span class="w"> </span><span class="n">FUN</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><strong>Analyze ridership data by type and weekday</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_by_type_wday</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">weekday</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">wday</span><span class="p">(</span><span class="n">started_at</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">  </span><span class="c1">#creates weekday field using wday()</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">member_casual</span><span class="p">,</span><span class="w"> </span><span class="n">weekday</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">  </span><span class="c1">#groups by usertype and weekday</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">number_of_rides</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">()</span><span class="w">							</span><span class="c1">#calculates the number of rides and average duration </span><span class="w">
            </span><span class="p">,</span><span class="n">average_duration</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">ride_length</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 		</span><span class="c1"># calculates the average duration</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">member_casual</span><span class="p">,</span><span class="w"> </span><span class="n">weekday</span><span class="p">)</span><span class="w">	
</span></code></pre></div></div>

<p><strong>Let’s visualize the number of rides by rider type</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_by_type_wday</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">weekday</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">number_of_rides</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">member_casual</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_col</span><span class="p">(</span><span class="n">position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"dodge"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><strong>Let’s visualize the average ride duration by rider type</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_by_type_wday</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">weekday</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">average_duration</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">member_casual</span><span class="p">))</span><span class="o">+</span><span class="w">
  </span><span class="n">geom_col</span><span class="p">(</span><span class="n">position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"dodge"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<h3 id="step-5-export-summary-file-for-further-analysis">STEP 5: EXPORT SUMMARY FILE FOR FURTHER ANALYSIS</h3>

<p><strong>Create a csv file that we will visualize in Excel, Tableau, or any presentation software</strong></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">counts</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">aggregate</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">ride_length</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">member_casual</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">day_of_week</span><span class="p">,</span><span class="w"> </span><span class="n">FUN</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">)</span><span class="w">
</span><span class="n">write.csv</span><span class="p">(</span><span class="n">counts</span><span class="p">,</span><span class="w"> </span><span class="n">file</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"avg_ride_length.csv"</span><span class="p">)</span><span class="w">

</span><span class="n">num_rides</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">aggregate</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">ride_id</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">member_casual</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">day_of_week</span><span class="p">,</span><span class="w"> </span><span class="n">FUN</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">length</span><span class="p">)</span><span class="w">
</span><span class="n">write_csv</span><span class="p">(</span><span class="n">num_rides</span><span class="p">,</span><span class="n">file</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"num_rides_by_day_of_week.csv"</span><span class="p">)</span><span class="w">

</span><span class="n">rides_by_time</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">aggregate</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">ride_id</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">member_casual</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">started_at</span><span class="p">,</span><span class="w"> </span><span class="n">FUN</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">length</span><span class="p">)</span><span class="w">
</span><span class="n">write_csv</span><span class="p">(</span><span class="n">rides_by_time</span><span class="p">,</span><span class="w"> </span><span class="n">file</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"num_rides_by_time_of_day.csv"</span><span class="p">)</span><span class="w">

</span><span class="n">type_bike</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">aggregate</span><span class="p">(</span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">ride_id</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">member_casual</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">data_apr21_mar22_V2</span><span class="o">$</span><span class="n">rideable_type</span><span class="p">,</span><span class="w"> </span><span class="n">FUN</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">length</span><span class="p">)</span><span class="w">
</span><span class="n">write_csv</span><span class="p">(</span><span class="n">type_bike</span><span class="p">,</span><span class="w"> </span><span class="n">file</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"type_of_bike_used_user_type.csv"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
:ET