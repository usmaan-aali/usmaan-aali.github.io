I"Ã›<h1 id="etl">ETL</h1>
<p>load libraries</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stringi</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">readxl</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h1 id="load-data">Load Data</h1>

<p>Enter the path of the folder for task files</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">back_data_dir</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">file.path</span><span class="p">(</span><span class="s2">"E:/experiment_data/Backward"</span><span class="p">)</span><span class="w">
</span><span class="n">flanker_data_dir</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">file.path</span><span class="p">(</span><span class="s2">"E:/experiment_data/Flanker"</span><span class="p">)</span><span class="w">
</span><span class="n">stroop_data_dir</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">file.path</span><span class="p">(</span><span class="s2">"E:/experiment_data/Stroop"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Create a list of all file names</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">back_file_names</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">list.files</span><span class="p">(</span><span class="n">back_data_dir</span><span class="p">,</span><span class="n">pattern</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">".txt"</span><span class="p">,</span><span class="w"> </span><span class="n">full.names</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">flanker_file_names</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">list.files</span><span class="p">(</span><span class="n">flanker_data_dir</span><span class="p">,</span><span class="n">pattern</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">".txt"</span><span class="p">,</span><span class="w"> </span><span class="n">full.names</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">stroop_file_names</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">list.files</span><span class="p">(</span><span class="n">stroop_data_dir</span><span class="p">,</span><span class="n">pattern</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">".txt"</span><span class="p">,</span><span class="w"> </span><span class="n">full.names</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>Read data from all of the files and create a list</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_backward</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">back_file_names</span><span class="p">,</span><span class="w"> </span><span class="n">read.table</span><span class="p">)</span><span class="w">
</span><span class="n">data_flanker</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">flanker_file_names</span><span class="p">,</span><span class="w"> </span><span class="n">read.table</span><span class="p">)</span><span class="w">
</span><span class="n">data_stroop</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">stroop_file_names</span><span class="p">,</span><span class="w"> </span><span class="n">read.table</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Change the name of the each data frame of list to the participant name</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">names</span><span class="p">(</span><span class="n">data_backward</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">stri_sub</span><span class="p">(</span><span class="n">back_file_names</span><span class="p">,</span><span class="m">-9</span><span class="p">,</span><span class="m">-5</span><span class="p">)</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">data_flanker</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">stri_sub</span><span class="p">(</span><span class="n">flanker_file_names</span><span class="p">,</span><span class="m">-9</span><span class="p">,</span><span class="m">-5</span><span class="p">)</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">data_stroop</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">stri_sub</span><span class="p">(</span><span class="n">stroop_file_names</span><span class="p">,</span><span class="m">-9</span><span class="p">,</span><span class="m">-5</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>check the list of data frames with their participant name</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_backward</span><span class="w">
</span><span class="n">data_flanker</span><span class="w">
</span><span class="n">data_stroop</span><span class="w">
</span></code></pre></div></div>
<p>Convert list of data frames into one data frame</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">backward_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">do.call</span><span class="p">(</span><span class="s2">"rbind"</span><span class="p">,</span><span class="w"> </span><span class="n">data_backward</span><span class="p">)</span><span class="w">
</span><span class="n">flanker_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">do.call</span><span class="p">(</span><span class="s2">"rbind"</span><span class="p">,</span><span class="w"> </span><span class="n">data_flanker</span><span class="p">)</span><span class="w">
</span><span class="n">stroop_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">do.call</span><span class="p">(</span><span class="s2">"rbind"</span><span class="p">,</span><span class="w"> </span><span class="n">data_stroop</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>check single data frame of backward test</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str</span><span class="p">(</span><span class="n">backward_df</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">flanker_df</span><span class="p">)</span><span class="w">
</span><span class="n">str</span><span class="p">(</span><span class="n">stroop_df</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>Add participants name along with number of obseravation as column</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">backward_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tibble</span><span class="o">::</span><span class="n">rownames_to_column</span><span class="p">(</span><span class="n">backward_df</span><span class="p">,</span><span class="s2">"row_names"</span><span class="p">)</span><span class="w">
</span><span class="n">flanker_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tibble</span><span class="o">::</span><span class="n">rownames_to_column</span><span class="p">(</span><span class="n">flanker_df</span><span class="p">,</span><span class="s2">"row_names"</span><span class="p">)</span><span class="w">
</span><span class="n">stroop_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tibble</span><span class="o">::</span><span class="n">rownames_to_column</span><span class="p">(</span><span class="n">stroop_df</span><span class="p">,</span><span class="s2">"row_names"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>Change column names of backward task data frame</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">colnames</span><span class="p">(</span><span class="n">backward_df</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"participant.No_of_observation"</span><span class="p">,</span><span class="s2">"highest_span"</span><span class="p">,</span><span class="s2">"Number_of_times"</span><span class="p">,</span><span class="s2">"result_backwar_task"</span><span class="p">,</span><span class="s2">"Name_of_table_row"</span><span class="p">)</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">flanker_df</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"participant.No_of_observation"</span><span class="p">,</span><span class="s2">"stimulus"</span><span class="p">,</span><span class="s2">"congruency"</span><span class="p">,</span><span class="s2">"result_flanker_task"</span><span class="p">,</span><span class="s2">"response_time"</span><span class="p">)</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">stroop_df</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"participant.No_of_observation"</span><span class="p">,</span><span class="s2">"block_name"</span><span class="p">,</span><span class="s2">"name_of_word"</span><span class="p">,</span><span class="s2">"color_of_word"</span><span class="p">,</span><span class="s2">"match"</span><span class="p">,</span><span class="s2">"table_row"</span><span class="p">,</span><span class="s2">"key_pressed"</span><span class="p">,</span><span class="s2">"answer"</span><span class="p">,</span><span class="s2">"response_time_milisecond"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<h1 id="creatingsaving-files">Creating/Saving files</h1>

<p>Save backward data frame as csv</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">write.csv</span><span class="p">(</span><span class="n">backward_df</span><span class="p">,</span><span class="n">file</span><span class="o">=</span><span class="s2">"backward_data.csv"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>Save flanker data frame as csv</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">write.csv</span><span class="p">(</span><span class="n">flanker_df</span><span class="p">,</span><span class="n">file</span><span class="o">=</span><span class="s2">"flanker_data.csv"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>Save stroop data frame as csv</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">write.csv</span><span class="p">(</span><span class="n">stroop_df</span><span class="p">,</span><span class="n">file</span><span class="o">=</span><span class="s2">"stroop_data.csv"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>Combine/merge stroop task and flanker task data frames into one data frame</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">stroop_flanker</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">merge</span><span class="p">(</span><span class="n">stroop_df</span><span class="p">,</span><span class="n">flanker_df</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"participant.No_of_observation"</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="n">all</span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>Now, combine/merge the backward data frame to previously merged stroop and flanker data</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">experiment_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">merge</span><span class="p">(</span><span class="n">stroop_flanker</span><span class="p">,</span><span class="n">backward_df</span><span class="p">,</span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="s2">"participant.No_of_observation"</span><span class="p">,</span><span class="w"> </span><span class="n">all</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>Save the combined data of backward, flanker and stroop data as csv file</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">write_csv</span><span class="p">(</span><span class="n">experiment_data</span><span class="p">,</span><span class="w"> </span><span class="n">file</span><span class="o">=</span><span class="s2">"experiment_data.csv"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<h2 id="calculate-score-of-each-task-corresponding-to-relevant-participant">Calculate score of each task corresponding to relevant participant</h2>

<p>Initialize an empty data frame for task score data of participants</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_back_score</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">matrix</span><span class="p">(</span><span class="n">ncol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="p">))</span><span class="w">
</span><span class="n">df_flank_score</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">matrix</span><span class="p">(</span><span class="n">ncol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="p">))</span><span class="w">
</span><span class="n">df_stroop_score</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">matrix</span><span class="p">(</span><span class="n">ncol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>
<h3 id="loop-through-each-list-of-task-data-to-calculate-the-percentage-score-of-participants-in-each-task">loop through each list of task data to calculate the percentage score of participants in each task</h3>

<p>Loop 1 : For backward task</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">data_backward</span><span class="p">)){</span><span class="w">
  
  </span><span class="c1">#### get result variable from each data frame of participants</span><span class="w">
  </span><span class="n">x</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data_backward</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="o">$</span><span class="n">V3</span><span class="w">
  
  </span><span class="c1">#### count number of occurrences for each type of result</span><span class="w">
  </span><span class="n">x_cout</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">table</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w">
  
  </span><span class="c1">#### calculate percentage for each type(correct or wrong) of result </span><span class="w">
  </span><span class="n">x_percent</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">x_cout</span><span class="o">/</span><span class="nf">length</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w">
  
  </span><span class="c1">#### convert the table containing the percentage of result to data frame</span><span class="w">
  </span><span class="n">x_score</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">x_percent</span><span class="p">)</span><span class="w">
  
  </span><span class="c1">#### get the name of the participant</span><span class="w">
  </span><span class="n">name</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">data_backward</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="w">
  
  </span><span class="c1">#### add participant name to its score for reference</span><span class="w">
  </span><span class="n">x_score</span><span class="o">$</span><span class="n">participant</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">name</span><span class="w">
  
  </span><span class="c1">#### create a single data frame for all of the participants</span><span class="w">
  </span><span class="n">df_back_score</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rbind</span><span class="p">(</span><span class="n">df_back_score</span><span class="p">,</span><span class="w"> </span><span class="n">x_score</span><span class="p">)</span><span class="w">
  
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>
<p>Loop 2: For flanker task</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">data_flanker</span><span class="p">)){</span><span class="w">
  
  </span><span class="c1">#### get result variable from each data frame of participants</span><span class="w">
  </span><span class="n">x</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data_flanker</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="o">$</span><span class="n">V3</span><span class="w">
  
  </span><span class="c1">#### count number of occurrences for each type of result</span><span class="w">
  </span><span class="n">x_cout</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">table</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w">
  
  </span><span class="c1">#### calculate percentage for each type(correct or wrong) of result </span><span class="w">
  </span><span class="n">x_percent</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">x_cout</span><span class="o">/</span><span class="nf">length</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w">
  
  </span><span class="c1">#### convert the table containing the percentage of result to data frame</span><span class="w">
  </span><span class="n">x_score</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">x_percent</span><span class="p">)</span><span class="w">
  
  </span><span class="c1">#### get the name of the participant</span><span class="w">
  </span><span class="n">name</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">data_flanker</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="w">
  
  </span><span class="c1">#### add participant name to its score for reference</span><span class="w">
  </span><span class="n">x_score</span><span class="o">$</span><span class="n">participant</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">name</span><span class="w">
  
  </span><span class="c1">#### create a single data frame for all of the participants</span><span class="w">
  </span><span class="n">df_flank_score</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rbind</span><span class="p">(</span><span class="n">df_flank_score</span><span class="p">,</span><span class="w"> </span><span class="n">x_score</span><span class="p">)</span><span class="w">
  
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>
<p>Loop 3: For stroop task</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">data_stroop</span><span class="p">)){</span><span class="w">
  
  </span><span class="c1">#### get result variable from each data frame of participants</span><span class="w">
  </span><span class="n">x</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data_stroop</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="o">$</span><span class="n">V7</span><span class="w">
  
  </span><span class="c1">#### count number of occurrences for each type of result</span><span class="w">
  </span><span class="n">x_cout</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">table</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w">
  
  </span><span class="c1">#### calculate percentage for each type(correct or wrong) of result </span><span class="w">
  </span><span class="n">x_percent</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">x_cout</span><span class="o">/</span><span class="nf">length</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w">
  
  </span><span class="c1">#### convert the table containing the percentage of result to data frame</span><span class="w">
  </span><span class="n">x_score</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">x_percent</span><span class="p">)</span><span class="w">
  
  </span><span class="c1">#### get the name of the participant</span><span class="w">
  </span><span class="n">name</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">data_stroop</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="w">
  
  </span><span class="c1">#### add participant name to its score for reference</span><span class="w">
  </span><span class="n">x_score</span><span class="o">$</span><span class="n">participant</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">name</span><span class="w">
  
  </span><span class="c1">#### create a single data frame for all of the participants</span><span class="w">
  </span><span class="n">df_stroop_score</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rbind</span><span class="p">(</span><span class="n">df_stroop_score</span><span class="p">,</span><span class="w"> </span><span class="n">x_score</span><span class="p">)</span><span class="w">
  
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>
<h3 id="change-variable-names-for-better-understanding">change variable names for better understanding</h3>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">colnames</span><span class="p">(</span><span class="n">df_back_score</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"result"</span><span class="p">,</span><span class="w"> </span><span class="s2">"back_score_percentage"</span><span class="p">,</span><span class="s2">"participant"</span><span class="p">)</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">df_flank_score</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"result"</span><span class="p">,</span><span class="w"> </span><span class="s2">"flank_score_percentage"</span><span class="p">,</span><span class="s2">"participant"</span><span class="p">)</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">df_stroop_score</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"result"</span><span class="p">,</span><span class="w"> </span><span class="s2">"stroop_score_percentage"</span><span class="p">,</span><span class="s2">"participant"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<h3 id="getting-the-data-of-participant-where-result-is-correct">getting the data of participant where result is correct</h3>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_correct</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df_back_score</span><span class="p">[</span><span class="n">df_back_score</span><span class="o">$</span><span class="n">result</span><span class="o">==</span><span class="m">1</span><span class="p">,]</span><span class="w">
</span><span class="n">df_flank_score_correct</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df_flank_score</span><span class="p">[</span><span class="n">df_flank_score</span><span class="o">$</span><span class="n">result</span><span class="o">==</span><span class="m">1</span><span class="p">,]</span><span class="w">
</span><span class="n">df_stroop_correct</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df_stroop_score</span><span class="p">[</span><span class="n">df_stroop_score</span><span class="o">$</span><span class="n">result</span><span class="o">==</span><span class="m">1</span><span class="p">,]</span><span class="w">
</span></code></pre></div></div>
<h3 id="rounding-the-percentage-of-the-result-to-two-digits">rounding the percentage of the result to two digits</h3>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_correct2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df_correct</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate_if</span><span class="p">(</span><span class="n">is.numeric</span><span class="p">,</span><span class="w">
            </span><span class="n">round</span><span class="p">,</span><span class="w">
            </span><span class="n">digits</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w">

</span><span class="n">df_stroop_correct2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df_stroop_correct</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate_if</span><span class="p">(</span><span class="n">is.numeric</span><span class="p">,</span><span class="w">
            </span><span class="n">round</span><span class="p">,</span><span class="w">
            </span><span class="n">digits</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<h2 id="combine-scores-of-participants-with-their-age-and-iq-data">Combine scores of participants with their age and IQ data</h2>

<p>read excel file of age and IQ data of participants</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">general_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_excel</span><span class="p">(</span><span class="s2">"Age, IQ, Language.xlsx"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>change column names</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">colnames</span><span class="p">(</span><span class="n">general_data</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"participant"</span><span class="p">,</span><span class="w"> </span><span class="s2">"age"</span><span class="p">,</span><span class="w"> </span><span class="s2">"language"</span><span class="p">,</span><span class="w"> </span><span class="s2">"IQ"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>merge participants general data with backward, flanker and stroop task score</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_b</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">merge</span><span class="p">(</span><span class="n">general_data</span><span class="p">,</span><span class="w"> </span><span class="n">df_correct2</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="s2">"participant"</span><span class="p">,</span><span class="w"> </span><span class="n">all</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="w"> </span><span class="p">)</span><span class="w">
</span><span class="n">data_f</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">merge</span><span class="p">(</span><span class="n">data_b</span><span class="p">,</span><span class="w"> </span><span class="n">df_flank_score_correct</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"participant"</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="n">all</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">merge</span><span class="p">(</span><span class="n">data_f</span><span class="p">,</span><span class="w"> </span><span class="n">df_stroop_correct2</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"participant"</span><span class="p">,</span><span class="w"> </span><span class="n">all</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>remove unnecessary variables</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_new</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">data</span><span class="p">,</span><span class="w"> </span><span class="n">select</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">-</span><span class="nf">c</span><span class="p">(</span><span class="m">5</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">9</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>
<p>Some rows have NA value, replacing it with 0</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_new</span><span class="o">$</span><span class="n">back_score_percentage</span><span class="p">[</span><span class="nf">is.na</span><span class="p">(</span><span class="n">data_new</span><span class="o">$</span><span class="n">back_score_percentage</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">0</span><span class="w">
</span><span class="n">data_new</span><span class="o">$</span><span class="n">flank_score_percentage</span><span class="p">[</span><span class="nf">is.na</span><span class="p">(</span><span class="n">data_new</span><span class="o">$</span><span class="n">flank_score_percentage</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">0</span><span class="w">
</span><span class="n">data_new</span><span class="o">$</span><span class="n">stroop_score_percentage</span><span class="p">[</span><span class="nf">is.na</span><span class="p">(</span><span class="n">data_new</span><span class="o">$</span><span class="n">stroop_score_percentage</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></code></pre></div></div>
<h1 id="linear-regression-models">Linear regression models</h1>

<p>Linear regression model for backward task</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">backward_linear_model</span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lm</span><span class="p">(</span><span class="n">back_score_percentage</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">age</span><span class="o">+</span><span class="n">IQ</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">data_new</span><span class="w"> </span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>Linear regression model for flanker task</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">flanker_linear_model</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lm</span><span class="p">(</span><span class="n">flank_score_percentage</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">age</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">IQ</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">data_new</span><span class="w"> </span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>Linear regression model for stroop task</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">stroop_linear_model</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lm</span><span class="p">(</span><span class="n">stroop_score_percentage</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">age</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">IQ</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">data_new</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

:ET